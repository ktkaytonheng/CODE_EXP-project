{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\solom\\\\Documents\\\\CODE_EXP-project\\\\screens\\\\StallsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AddListScreen from \"./AddListScreen\";\nimport firebase from \"../database/firebaseDB\";\nvar db = firebase.firestore().collection(\"shopInfo\");\n\nfunction StallsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: console.log(\"lol\"),\n          title: \"Add\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  });\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shopInfo = _React$useState2[0],\n      setShopInfo = _React$useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection(\"shopInfo\").onSnapshot(function (collection) {\n      var updatedShopInfo = collection.docs.map(function (doc) {\n        return doc.data();\n      });\n      setShopInfo(updatedShopInfo);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Add List', _objectSpread({}, item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.itemContainer],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: item.shopMenu\n      },\n      style: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.itemName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, item.shopName), React.createElement(Text, {\n      style: styles.itemCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, item.shopLocation))));\n  }\n\n  return React.createElement(FlatGrid, {\n    itemDimension: 130,\n    data: shopInfo,\n    style: styles.gridView,\n    spacing: 10,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  });\n}\n\nvar Stack = createStackNavigator();\nexport default function StallsScreenStack() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"StallsScreen\",\n    component: StallsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Add List\",\n    component: AddListScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  gridView: {\n    marginTop: 10,\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/solom/Documents/CODE_EXP-project/screens/StallsScreen.js"],"names":["React","useEffect","useState","StatusBar","FlatGrid","createStackNavigator","NavigationContainer","AddListScreen","firebase","db","firestore","collection","StallsScreen","navigation","setOptions","headerRight","console","log","shopInfo","setShopInfo","unsubscribe","onSnapshot","updatedShopInfo","docs","map","doc","data","renderItem","item","navigate","styles","itemContainer","uri","shopMenu","image","itemName","shopName","itemCode","shopLocation","gridView","Stack","StallsScreenStack","StyleSheet","create","marginTop","flex","justifyContent","borderRadius","padding","height","fontSize","color","fontWeight","resizeMode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, Text, TouchableOpacity, ImageBackground, Button } from 'react-native';\r\nimport { FlatGrid } from 'react-native-super-grid';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport AddListScreen from './AddListScreen';\r\n\r\nimport firebase from \"../database/firebaseDB\";\r\n\r\nconst db = firebase.firestore().collection(\"shopInfo\");\r\n\r\nfunction StallsScreen({ navigation }) {\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => <Button onPress={console.log(\"lol\")} title=\"Add\" />,\r\n    });\r\n  });\r\n\r\n  const [shopInfo, setShopInfo] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"shopInfo\")\r\n      .onSnapshot((collection) => {\r\n        const updatedShopInfo = collection.docs.map((doc) => doc.data());\r\n        setShopInfo(updatedShopInfo);\r\n      });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  function renderItem({ item }) {\r\n    return (\r\n      <TouchableOpacity\r\n          onPress={() => {\r\n          navigation.navigate('Add List', { ...item });\r\n        }}>\r\n            <View style={[styles.itemContainer]}>\r\n            <ImageBackground source={{ uri: item.shopMenu }} style={styles.image}>\r\n              <Text style={styles.itemName}>{item.shopName}</Text>\r\n              <Text style={styles.itemCode}>{item.shopLocation}</Text>\r\n            </ImageBackground>\r\n            </View>\r\n          </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <FlatGrid\r\n        itemDimension={130}\r\n        data={shopInfo}\r\n        style={styles.gridView}\r\n        // staticDimension={300}\r\n        // fixed\r\n        spacing={10}\r\n        renderItem={renderItem}\r\n      />\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function StallsScreenStack() {\r\n  return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"StallsScreen\" component={StallsScreen} />\r\n        <Stack.Screen name=\"Add List\" component={AddListScreen} />\r\n      </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  gridView: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n  },\r\n  itemContainer: {\r\n    justifyContent: 'flex-end',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 150,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  itemCode: {\r\n    fontWeight: '600',\r\n    fontSize: 12,\r\n    color: '#fff',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}