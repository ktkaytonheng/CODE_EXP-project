{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\solom\\\\Documents\\\\CODE_EXP-project\\\\screens\\\\GroupBuyScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Layout, Section, SectionContent } from \"react-native-rapi-ui\";\nimport { Button } from \"react-native-rapi-ui\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport AddGroupBuy from \"./AddGroupBuy\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ViewOrdersScreen from \"./ViewOrdersScreen\";\nvar Stack = createStackNavigator();\nimport { Ionicons } from \"@expo/vector-icons\";\nimport firebase from \"../database/firebaseDB\";\nvar db = firebase.firestore().collection(\"shopInfo\");\n\nfunction GroupBuyScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      shopInfo = _useState2[0],\n      setShopInfo = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection(\"shopInfo\").onSnapshot(function (collection) {\n      var updatedRemarks = collection.docs.map(function (doc) {\n        return doc.data();\n      });\n      setShopInfo(updatedRemarks);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.itemContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, item.shopName), React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: item.shopMenu\n      },\n      style: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.icon,\n      onPress: function onPress() {\n        return deleteNote(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(Ionicons, {\n      name: \"trash\",\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      style: styles.button,\n      text: \"Order Group buy \",\n      size: \"lg\",\n      onPress: function onPress() {\n        return navigation.navigate(\"AddGroupBuy\", {\n          newShopName: item.shopName\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      text: \"View Last orders \",\n      onPress: function onPress() {\n        return navigation.navigate(\"ViewOrdersScreen\");\n      },\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n  return React.createElement(FlatGrid, {\n    itemDimension: \"2\",\n    data: shopInfo,\n    style: styles.gridView,\n    spacing: 10,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default function GroupBuyStack() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerTitle: \"Join a Group Buy\"\n    },\n    name: \"GroupBuyScreen\",\n    component: GroupBuyScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerTitle: \"Add Food Order\"\n    },\n    name: \"AddGroupBuy\",\n    component: AddGroupBuy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerTitle: \"View Current Orders\"\n    },\n    name: \"ViewOrdersScreen\",\n    component: ViewOrdersScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffc\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    padding: 20,\n    margin: 10\n  },\n  btnText: {\n    color: \"white\",\n    fontSize: 10,\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  gridView: {\n    marginTop: 10,\n    flex: 1\n  },\n  itemContainer: {\n    width: '100%',\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 200\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  },\n  icon: {\n    marginTop: -5\n  }\n});","map":{"version":3,"sources":["C:/Users/solom/Documents/CODE_EXP-project/screens/GroupBuyScreen.js"],"names":["React","useEffect","useState","Layout","Section","SectionContent","Button","FlatGrid","AddGroupBuy","createStackNavigator","ViewOrdersScreen","Stack","Ionicons","firebase","db","firestore","collection","GroupBuyScreen","navigation","shopInfo","setShopInfo","unsubscribe","onSnapshot","updatedRemarks","docs","map","doc","data","renderItem","item","styles","itemContainer","textAlign","shopName","container","uri","shopMenu","image","icon","deleteNote","id","button","navigate","newShopName","gridView","GroupBuyStack","headerTitle","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","margin","btnText","color","fontSize","marginTop","width","borderRadius","height","itemName","fontWeight","resizeMode","itemCode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { Layout, Section, SectionContent } from \"react-native-rapi-ui\";\r\nimport { Button } from \"react-native-rapi-ui\";\r\nimport { FlatGrid } from 'react-native-super-grid';\r\nimport AddGroupBuy from \"./AddGroupBuy\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport ViewOrdersScreen from \"./ViewOrdersScreen\";\r\nconst Stack = createStackNavigator();\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport firebase from \"../database/firebaseDB\";\r\n\r\nconst db = firebase.firestore().collection(\"shopInfo\");\r\n\r\nfunction GroupBuyScreen({ navigation }) {\r\n  const [shopInfo, setShopInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"shopInfo\")\r\n      .onSnapshot((collection) => {\r\n        const updatedRemarks = collection.docs.map((doc) => doc.data());\r\n        setShopInfo(updatedRemarks);\r\n      });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  // The function to render each row in our FlatList\r\n  function renderItem({ item }) {\r\n    return (\r\n      <View style={styles.itemContainer}>\r\n        <Text style={{textAlign: \"center\"}}>{item.shopName}</Text>\r\n        <View style={styles.container}>\r\n          <ImageBackground source={{ uri: item.shopMenu }} style={styles.image}>\r\n            <TouchableOpacity \r\n              style={styles.icon} \r\n              onPress={() => deleteNote(item.id)}>\r\n              <Ionicons name=\"trash\" size={20} />\r\n            </TouchableOpacity>\r\n            <View style={styles.button}>\r\n            <Button\r\n              style={styles.button}\r\n              text=\"Order Group buy \"\r\n              size=\"lg\"\r\n              onPress={() =>\r\n                navigation.navigate(\"AddGroupBuy\", {\r\n                  newShopName: item.shopName,\r\n                })\r\n              }\r\n              \r\n            />\r\n            <Button\r\n              text=\"View Last orders \"\r\n              onPress={() => navigation.navigate(\"ViewOrdersScreen\")}\r\n              size=\"lg\"\r\n            />\r\n          </View>\r\n          </ImageBackground>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FlatGrid\r\n        itemDimension={\"2\"}\r\n        data={shopInfo}\r\n        style={styles.gridView}\r\n        // staticDimension={300}\r\n        // fixed\r\n        spacing={10}\r\n        renderItem={renderItem}\r\n        // keyExtractor={(item) => item.id.toString()}\r\n      />\r\n  );\r\n}\r\n\r\nexport default function GroupBuyStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        options={{ headerTitle: \"Join a Group Buy\" }}\r\n        name=\"GroupBuyScreen\"\r\n        component={GroupBuyScreen}\r\n      />\r\n      <Stack.Screen\r\n        options={{ headerTitle: \"Add Food Order\" }}\r\n        name=\"AddGroupBuy\"\r\n        component={AddGroupBuy}\r\n      />\r\n      <Stack.Screen\r\n        options={{ headerTitle: \"View Current Orders\" }}\r\n        name=\"ViewOrdersScreen\"\r\n        component={ViewOrdersScreen}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffc\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    padding: 20,\r\n    margin: 10,\r\n  },\r\n  btnText: {\r\n    color: \"white\",\r\n    fontSize: 10,\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  gridView: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n  },\r\n  itemContainer: {\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 200,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  itemCode: {\r\n    fontWeight: '600',\r\n    fontSize: 12,\r\n    color: '#fff',\r\n  },\r\n  icon: {\r\n\r\n    marginTop: -5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}