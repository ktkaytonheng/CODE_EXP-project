{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"height\", \"backgroundColor\", \"borderColor\", \"leftAction\", \"middleAction\", \"rightAction\", \"leftContent\", \"middleContent\", \"rightContent\", \"leftTextStyle\", \"rightTextStyle\", \"middleTextStyle\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\maste\\\\Desktop\\\\Version2\\\\CODE_EXP-project\\\\node_modules\\\\react-native-rapi-ui\\\\components\\\\TopNav\\\\TopNav.tsx\";\n\nimport React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { component } from \"../../constants/colors\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { Text } from \"../Text\";\n\nvar TopNav = function TopNav(_ref) {\n  var _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 64 : _ref$height,\n      backgroundColor = _ref.backgroundColor,\n      borderColor = _ref.borderColor,\n      leftAction = _ref.leftAction,\n      middleAction = _ref.middleAction,\n      rightAction = _ref.rightAction,\n      leftContent = _ref.leftContent,\n      middleContent = _ref.middleContent,\n      rightContent = _ref.rightContent,\n      leftTextStyle = _ref.leftTextStyle,\n      rightTextStyle = _ref.rightTextStyle,\n      middleTextStyle = _ref.middleTextStyle,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  return React.createElement(View, _extends({}, rest, {\n    style: {\n      height: height,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      backgroundColor: backgroundColor ? backgroundColor : component[theme].topNav.backgroundColor,\n      alignItems: \"center\",\n      borderColor: backgroundColor ? borderColor : component[theme].topNav.borderColor,\n      borderBottomWidth: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: leftAction,\n    style: {\n      flex: 1,\n      alignItems: \"flex-start\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 20,\n      alignItems: \"flex-start\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, typeof leftContent == \"string\" ? React.createElement(Text, {\n    style: leftTextStyle,\n    fontWeight: \"bold\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, leftContent) : leftContent)), React.createElement(Pressable, {\n    onPress: middleAction,\n    style: {\n      flex: 4,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 20,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, typeof middleContent == \"string\" ? React.createElement(Text, {\n    style: middleTextStyle,\n    fontWeight: \"bold\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, middleContent) : middleContent)), React.createElement(TouchableOpacity, {\n    onPress: rightAction,\n    style: {\n      flex: 1,\n      alignItems: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 20,\n      alignItems: \"flex-end\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, typeof rightContent == \"string\" ? React.createElement(Text, {\n    style: rightTextStyle,\n    fontWeight: \"bold\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, rightContent) : rightContent)));\n};\n\nexport default TopNav;","map":{"version":3,"sources":["C:/Users/maste/Desktop/Version2/CODE_EXP-project/node_modules/react-native-rapi-ui/components/TopNav/TopNav.tsx"],"names":["React","component","useTheme","Text","TopNav","height","backgroundColor","borderColor","leftAction","middleAction","rightAction","leftContent","middleContent","rightContent","leftTextStyle","rightTextStyle","middleTextStyle","rest","theme","flexDirection","justifyContent","topNav","alignItems","borderBottomWidth","flex","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Pressable,\r\n  TextStyle,\r\n  View,\r\n  ViewProps,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { component } from \"../../constants/colors\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\nimport { Text } from \"../Text\";\r\n\r\ninterface Props extends ViewProps {\r\n  height?: number;\r\n  backgroundColor?: string;\r\n  borderColor?: string;\r\n  leftAction?: VoidFunction;\r\n  middleAction?: VoidFunction;\r\n  rightAction?: VoidFunction;\r\n  leftContent?: string | React.ReactNode;\r\n  rightContent?: string | React.ReactNode;\r\n  middleContent?: string | React.ReactNode;\r\n  leftTextStyle?: TextStyle;\r\n  rightTextStyle?: TextStyle;\r\n  middleTextStyle?: TextStyle;\r\n}\r\n\r\nconst TopNav: React.FC<Props> = ({\r\n  height = 64,\r\n  backgroundColor,\r\n  borderColor,\r\n  leftAction,\r\n  middleAction,\r\n  rightAction,\r\n  leftContent,\r\n  middleContent,\r\n  rightContent,\r\n  leftTextStyle,\r\n  rightTextStyle,\r\n  middleTextStyle,\r\n  ...rest\r\n}) => {\r\n  const { theme } = useTheme();\r\n  return (\r\n    <View\r\n      {...rest}\r\n      style={{\r\n        height: height,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: backgroundColor\r\n          ? backgroundColor\r\n          : component[theme].topNav.backgroundColor,\r\n        alignItems: \"center\",\r\n        borderColor: backgroundColor\r\n          ? borderColor\r\n          : component[theme].topNav.borderColor,\r\n        borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={leftAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof leftContent == \"string\" ? (\r\n            <Text style={leftTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {leftContent}\r\n            </Text>\r\n          ) : (\r\n            leftContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n      <Pressable\r\n        onPress={middleAction}\r\n        style={{\r\n          flex: 4,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof middleContent == \"string\" ? (\r\n            <Text style={middleTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {middleContent}\r\n            </Text>\r\n          ) : (\r\n            middleContent\r\n          )}\r\n        </View>\r\n      </Pressable>\r\n      <TouchableOpacity\r\n        onPress={rightAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-end\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof rightContent == \"string\" ? (\r\n            <Text style={rightTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {rightContent}\r\n            </Text>\r\n          ) : (\r\n            rightContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n"]},"metadata":{},"sourceType":"module"}