{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zhenw\\\\Desktop\\\\new\\\\CODE_EXP-project\\\\screens\\\\GroupBuyGroupScreen.js\";\n\nimport React, { useState } from \"react\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar GroupBuyGroupScreen = function GroupBuyGroupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      time = _useState6[0],\n      setTime = _useState6[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(time) {\n    setTime(time);\n    console.warn(\"A time has been picked: \", time);\n    hideDatePicker();\n  };\n\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: \"white\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Store to dabao from\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: text,\n    onChangeText: function onChangeText(input) {\n      return setText(input);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"How many packets?\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Pick a time\",\n    onPress: showDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"time\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \" Time picked : \", time), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"ViewOrdersScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Save\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default GroupBuyGroupScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffc\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textInput: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    width: \"80%\",\n    padding: 10,\n    marginTop: 20\n  },\n  button: {\n    padding: 10,\n    backgroundColor: \"blue\",\n    borderRadius: 5,\n    margin: 10,\n    marginTop: 30,\n    width: 80\n  },\n  buttonText: {\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["C:/Users/zhenw/Desktop/new/CODE_EXP-project/screens/GroupBuyGroupScreen.js"],"names":["React","useState","DateTimePickerModal","GroupBuyGroupScreen","navigation","isDatePickerVisible","setDatePickerVisibility","text","setText","time","setTime","showDatePicker","hideDatePicker","handleConfirm","console","warn","styles","container","backgroundColor","fontSize","textInput","input","buttonContainer","button","navigate","buttonText","goBack","StyleSheet","create","flex","alignItems","justifyContent","borderColor","borderWidth","width","padding","marginTop","borderRadius","margin","textAlign","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n} from \"react-native\";\r\nconst GroupBuyGroupScreen = ({ navigation }) => {\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n\r\n  const handleConfirm = (time) => {\r\n    setTime(time);\r\n    console.warn(\"A time has been picked: \", time);\r\n    hideDatePicker();\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: \"white\" }]}>\r\n      <Text style={{ fontSize: 24 }}>Store to dabao from</Text>\r\n      <TextInput\r\n        style={styles.textInput}\r\n        value={text}\r\n        onChangeText={(input) => setText(input)}\r\n      />\r\n      <Text style={{ fontSize: 24 }}>How many packets?</Text>\r\n      <View>\r\n        <Button title=\"Pick a time\" onPress={showDatePicker} />\r\n        <DateTimePickerModal\r\n          isVisible={isDatePickerVisible}\r\n          mode=\"time\"\r\n          onConfirm={handleConfirm}\r\n          onCancel={hideDatePicker}\r\n        />\r\n      </View>\r\n      <Text> Time picked : {time}</Text>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => navigation.navigate(\"ViewOrdersScreen\")}\r\n        >\r\n          <Text style={styles.buttonText}>Save</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.buttonText}>Cancel</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* <Text>{text.toUpperCase()}</Text> */}\r\n    </View>\r\n  );\r\n};\r\nexport default GroupBuyGroupScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffc\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textInput: {\r\n    borderColor: \"grey\",\r\n    borderWidth: 1,\r\n    width: \"80%\",\r\n    padding: 10,\r\n    marginTop: 20,\r\n  },\r\n  button: {\r\n    padding: 10,\r\n    backgroundColor: \"blue\",\r\n    borderRadius: 5,\r\n    margin: 10,\r\n    marginTop: 30,\r\n    width: 80,\r\n  },\r\n  buttonText: {\r\n    textAlign: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}