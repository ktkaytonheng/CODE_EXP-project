{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\solom\\\\Documents\\\\CODE_EXP-project\\\\screens\\\\EditListDetailScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport firebase from \"../database/firebaseDB\";\nvar db = firebase.firestore().collection(\"Listing\");\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function EditListDetailScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      remarks = _useState2[0],\n      setRemarks = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection(\"Listing\").onSnapshot(function (collection) {\n      var updatedRemarks = collection.docs.map(function (doc) {\n        return doc.data();\n      });\n      setRemarks(updatedRemarks);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: {\n        borderBottomColor: \"#ccc\",\n        borderBottomWidth: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.customerName],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, item.Customer), React.createElement(Text, {\n      style: [styles.customerRemark],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, item.Remarks));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: remarks,\n    renderItem: renderItem,\n    style: {\n      width: \"100%\"\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffc\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  listImage: {\n    width: 50,\n    height: 50\n  },\n  button: {\n    padding: 20,\n    margin: 10\n  },\n  btnText: {\n    color: \"white\",\n    fontSize: 20,\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  customerName: {\n    fontSize: 15,\n    textAlign: \"left\",\n    color: \"black\",\n    padding: 10,\n    paddingLeft: 20,\n    top: 1\n  },\n  customerRemark: {\n    fontSize: 12,\n    textAlign: \"left\",\n    color: \"black\",\n    paddingTop: 25,\n    paddingBottom: 50,\n    paddingLeft: 120,\n    paddingRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/solom/Documents/CODE_EXP-project/screens/EditListDetailScreen.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","firebase","db","firestore","collection","EditListDetailScreen","navigation","remarks","setRemarks","unsubscribe","onSnapshot","updatedRemarks","docs","map","doc","data","renderItem","item","borderBottomColor","borderBottomWidth","styles","customerName","Customer","customerRemark","Remarks","container","width","id","toString","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","listImage","height","button","padding","margin","btnText","color","fontSize","textAlign","paddingLeft","top","paddingTop","paddingBottom","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport firebase from \"../database/firebaseDB\";\r\n\r\nconst db = firebase.firestore().collection(\"Listing\");\r\n\r\n\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Button,\r\n    TextInput,\r\n  } from \"react-native\";\r\n\r\n\r\n  export default function EditListDetailScreen({navigation}){\r\n\r\n    const [remarks, setRemarks] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = firebase\r\n        .firestore()\r\n        .collection(\"Listing\")\r\n        .onSnapshot((collection) => {\r\n          const updatedRemarks = collection.docs.map((doc) => doc.data());\r\n          setRemarks(updatedRemarks);\r\n        });\r\n  \r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, []);\r\n  \r\n    // The function to render each row in our FlatList\r\n    function renderItem({ item }) {\r\n      return (\r\n        <View\r\n          style={{\r\n           \r\n            borderBottomColor: \"#ccc\",\r\n            borderBottomWidth: 2,\r\n         \r\n          }}\r\n        >\r\n          <Text style={[styles.customerName]}> \r\n                {item.Customer}</Text>\r\n          <Text style={[styles.customerRemark]}>\r\n              {item.Remarks}</Text>\r\n        </View>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          data={remarks}\r\n          renderItem={renderItem}\r\n          style={{ width: \"100%\" }}\r\n          keyExtractor={(item) => item.id.toString()}\r\n        />\r\n      </View>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"#ffc\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    listImage: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    button: {\r\n      padding: 20,\r\n      margin: 10,\r\n    },\r\n    btnText: {\r\n      color: \"white\",\r\n      fontSize: 20,\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n    \r\n    customerName : {\r\n        fontSize : 15,\r\n        textAlign : \"left\",\r\n        color:\"black\",\r\n        padding:10,\r\n        paddingLeft:20,\r\n        top:1,\r\n    },\r\n\r\n    customerRemark : {\r\n        fontSize : 12,\r\n        textAlign : \"left\",\r\n        color:\"black\",\r\n        paddingTop: 25,\r\n        paddingBottom: 50,\r\n        paddingLeft : 120,\r\n        paddingRight: 10,\r\n        \r\n       \r\n    }\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}