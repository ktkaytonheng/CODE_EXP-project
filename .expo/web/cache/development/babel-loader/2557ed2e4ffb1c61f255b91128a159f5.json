{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maste\\\\Desktop\\\\Version2\\\\CODE_EXP-project\\\\screens\\\\EditListDetailScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport firebase from \"../database/firebaseDB\";\nvar db = firebase.firestore().collection(\"Listing\");\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar SAMPLE_REMARKS = [{\n  title: \"Walk the cat\",\n  id: \"0\"\n}, {\n  title: \"Water the cat\",\n  id: \"1\"\n}];\n\nfunction NotesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      remarks = _useState2[0],\n      setRemarks = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection(\"Listing\").onSnapshot(function (collection) {\n      var updatedRemarks = collection.docs.map(function (doc) {\n        return doc.data();\n      });\n      setRemarks(updatedRemarks);\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: {\n        paddingTop: 50,\n        paddingBottom: 50,\n        borderBottomColor: \"#ccc\",\n        borderBottomWidth: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, item.Customer), React.createElement(Text, {\n      style: [styles.customerRemark],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, item.Remarks));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: remarks,\n    renderItem: renderItem,\n    style: {\n      width: \"100%\"\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default function EditListDetailScreen() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Notes\",\n    component: NotesScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffc\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  listImage: {\n    width: 50,\n    height: 50\n  },\n  button: {\n    padding: 20,\n    margin: 10\n  },\n  btnText: {\n    color: \"white\",\n    fontSize: 20,\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  customerRemark: {\n    fontSize: 12,\n    textAlign: \"right\",\n    color: \"black\",\n    paddingRight: 20,\n    marginHorizontal: 10,\n    textAlign: 'left'\n  }\n});","map":{"version":3,"sources":["C:/Users/maste/Desktop/Version2/CODE_EXP-project/screens/EditListDetailScreen.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","firebase","db","firestore","collection","SAMPLE_REMARKS","title","id","NotesScreen","navigation","remarks","setRemarks","unsubscribe","onSnapshot","updatedRemarks","docs","map","doc","data","renderItem","item","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","Customer","styles","customerRemark","Remarks","container","width","toString","Stack","EditListDetailScreen","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","listImage","height","button","padding","margin","btnText","color","fontSize","textAlign","paddingRight","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport firebase from \"../database/firebaseDB\";\r\n\r\nconst db = firebase.firestore().collection(\"Listing\");\r\n\r\n\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Button,\r\n    TextInput,\r\n  } from \"react-native\";\r\n\r\n  const SAMPLE_REMARKS = [\r\n    { title: \"Walk the cat\", id: \"0\"},\r\n    { title: \"Water the cat\", id: \"1\"},\r\n  ];\r\n\r\n\r\nfunction NotesScreen({navigation}){\r\n\r\n    const [remarks, setRemarks] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = firebase\r\n        .firestore()\r\n        .collection(\"Listing\")\r\n        .onSnapshot((collection) => {\r\n          const updatedRemarks = collection.docs.map((doc) => doc.data());\r\n          setRemarks(updatedRemarks);\r\n        });\r\n  \r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, []);\r\n  \r\n    // The function to render each row in our FlatList\r\n    function renderItem({ item }) {\r\n      return (\r\n        <View\r\n          style={{\r\n            paddingTop: 50,\r\n            paddingBottom: 50,\r\n            borderBottomColor: \"#ccc\",\r\n            borderBottomWidth: 2,\r\n          }}\r\n        >\r\n          <Text>{item.Customer}</Text>\r\n          <Text style={[styles.customerRemark]}>\r\n              {item.Remarks}</Text>\r\n        </View>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          data={remarks}\r\n          renderItem={renderItem}\r\n          style={{ width: \"100%\" }}\r\n          keyExtractor={(item) => item.id.toString()}\r\n        />\r\n      </View>\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function EditListDetailScreen() {\r\n\r\n    return (\r\n            <Stack.Navigator>\r\n                <Stack.Screen\r\n                    name= \"Notes\"\r\n                    component= {NotesScreen}\r\n                />\r\n            </Stack.Navigator>\r\n\r\n    );\r\n\r\n    \r\n  }\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"#ffc\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    listImage: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    button: {\r\n      padding: 20,\r\n      margin: 10,\r\n    },\r\n    btnText: {\r\n      color: \"white\",\r\n      fontSize: 20,\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n    customerRemark : {\r\n        fontSize : 12,\r\n        textAlign : \"right\",\r\n        color:\"black\",\r\n        paddingRight: 20,\r\n        marginHorizontal:10,\r\n        textAlign: 'left', \r\n   \r\n    }\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}