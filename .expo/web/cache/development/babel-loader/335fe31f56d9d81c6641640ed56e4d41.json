{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\solom\\\\Documents\\\\CODE_EXP-project\\\\screens\\\\StallsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AddListScreen from \"./AddListScreen\";\n\nfunction StallsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState([{\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }, {\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }, {\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }, {\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }, {\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }, {\n    name: 'TURQUOISE',\n    code: '#1abc9c'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db'\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      items = _React$useState2[0],\n      setItems = _React$useState2[1];\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Details', _objectSpread({}, item));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [styles.itemContainer, {\n        backgroundColor: item.code\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.itemName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, item.name), React.createElement(Text, {\n      style: styles.itemCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, item.code)));\n  }\n\n  return React.createElement(FlatGrid, {\n    itemDimension: 130,\n    data: items,\n    style: styles.gridView,\n    spacing: 10,\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  });\n}\n\nvar Stack = createStackNavigator();\nexport default function StallsScreenStack() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"StallsScreen\",\n    component: StallsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: AddListScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  gridView: {\n    marginTop: 10,\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/solom/Documents/CODE_EXP-project/screens/StallsScreen.js"],"names":["React","StatusBar","FlatGrid","createStackNavigator","NavigationContainer","AddListScreen","StallsScreen","navigation","useState","name","code","items","setItems","renderItem","item","navigate","styles","itemContainer","backgroundColor","itemName","itemCode","gridView","Stack","StallsScreenStack","StyleSheet","create","marginTop","flex","justifyContent","borderRadius","padding","height","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { FlatGrid } from 'react-native-super-grid';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport AddListScreen from './AddListScreen';\r\n\r\nfunction StallsScreen({ navigation }) {\r\n  const [items, setItems] = React.useState([\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n    { name: 'TURQUOISE', code: '#1abc9c' },\r\n    { name: 'EMERALD', code: '#2ecc71' },\r\n    { name: 'PETER RIVER', code: '#3498db' },\r\n  ]);\r\n\r\n  function renderItem({ item }) {\r\n    return (\r\n      <TouchableOpacity\r\n          onPress={() => {\r\n          navigation.navigate('Details', { ...item });\r\n        }}>\r\n            <View style={[styles.itemContainer, { backgroundColor: item.code }]}>\r\n              <Text style={styles.itemName}>{item.name}</Text>\r\n              <Text style={styles.itemCode}>{item.code}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <FlatGrid\r\n        itemDimension={130}\r\n        data={items}\r\n        style={styles.gridView}\r\n        // staticDimension={300}\r\n        // fixed\r\n        spacing={10}\r\n        renderItem={renderItem}\r\n      />\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function StallsScreenStack() {\r\n  return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"StallsScreen\" component={StallsScreen} />\r\n        <Stack.Screen name=\"Details\" component={AddListScreen} />\r\n      </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  gridView: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n  },\r\n  itemContainer: {\r\n    justifyContent: 'flex-end',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 150,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  itemCode: {\r\n    fontWeight: '600',\r\n    fontSize: 12,\r\n    color: '#fff',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}