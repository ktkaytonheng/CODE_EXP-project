{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solom\\\\Documents\\\\New\\\\CODE_EXP-project\\\\App.js\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport GroupBuyScreen from \"./screens/GroupBuyScreen\";\nimport StallsScreen from \"./screens/StallsScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ListingScreen from \"./screens/ListingScreen\";\nimport AddScreen from \"./screens/AddScreen\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport EditListDetailScreen from \"./screens/EditListDetailScreen\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = \"home\";\n          } else if (route.name === \"Group buy\") {\n            iconName = \"credit-card\";\n          } else if (route.name === \"Listing\") {\n            iconName = \"list\";\n          } else if (route.name === \"Add place\") {\n            iconName = \"plus-circle\";\n          }\n\n          return React.createElement(FontAwesome, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: StallsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Group buy\",\n    component: GroupBuyScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Listing\",\n    component: EditListDetailScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Add place\",\n    component: AddScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n\n  function StackScreen() {\n    return React.createElement(Stack.Navigator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'My home',\n        headerStyle: {\n          backgroundColor: '#f4511e'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/solom/Documents/New/CODE_EXP-project/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","HomeScreen","GroupBuyScreen","StallsScreen","createStackNavigator","ListingScreen","AddScreen","FontAwesome","EditListDetailScreen","Tab","Stack","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","StackScreen","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport GroupBuyScreen from \"./screens/GroupBuyScreen\";\r\nimport StallsScreen from \"./screens/StallsScreen\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport ListingScreen from \"./screens/ListingScreen\";\r\nimport AddScreen from \"./screens/AddScreen\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\nimport EditListDetailScreen from \"./screens/EditListDetailScreen\";\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            //Set the icon based on which route it is (name of the tab)\r\n            if (route.name === \"Home\") {\r\n              iconName = \"home\";\r\n            } else if (route.name === \"Group buy\") {\r\n              iconName = \"credit-card\";\r\n            } else if (route.name === \"Listing\") {\r\n              iconName = \"list\";\r\n            } else if (route.name === \"Add place\") {\r\n              iconName = \"plus-circle\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <FontAwesome name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"tomato\",\r\n          inactiveTintColor: \"gray\",\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={StallsScreen} />\r\n        <Tab.Screen name=\"Group buy\" component={GroupBuyScreen} />\r\n        <Tab.Screen name=\"Listing\" component={EditListDetailScreen} />\r\n        <Tab.Screen name=\"Add place\" component={AddScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n\r\n  function StackScreen() {\r\n    return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n          options={{\r\n            title: 'My home',\r\n            headerStyle: {\r\n              backgroundColor: '#f4511e',\r\n            },\r\n            headerTintColor: '#fff',\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold',\r\n            },\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}