{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhenw\\\\Desktop\\\\new\\\\CODE_EXP-project\\\\screens\\\\AddScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as ImagePicker from 'expo-image-picker';\nimport ActionButton from 'react-native-action-button';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nexport default function ImagePickerExample() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      text2 = _React$useState4[0],\n      onChangeText2 = _React$useState4[1];\n\n  var _useState3 = useState(\"Shop Name\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      titleText = _useState4[0],\n      setTitleText = _useState4[1];\n\n  var _useState5 = useState(\"Location\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      titleText2 = _useState6[0],\n      setTitleText2 = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var Separator = function Separator() {\n    return React.createElement(View, {\n      style: styles.separator,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [20, 50],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cameraImage = function cameraImage() {\n    var result;\n    return _regeneratorRuntime.async(function cameraImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [20, 50],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 250,\n      height: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Shop Name\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: onChangeText,\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Location\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: onChangeText2,\n    value: text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: function onPress() {\n      return Alert.alert('Simple Button pressed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(ActionButton, {\n    buttonColor: \"#2e64e5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(ActionButton.Item, {\n    buttonColor: \"#9b59b6\",\n    title: \"Take Photo\",\n    onPress: cameraImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"camera-outline\",\n    style: styles.actionButtonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), React.createElement(ActionButton.Item, {\n    buttonColor: \"#3498db\",\n    title: \"Choose Photo\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"md-images-outline\",\n    style: styles.actionButtonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    width: 300,\n    margin: 12,\n    borderWidth: 1\n  },\n  actionButtonIcon: {\n    fontSize: 20,\n    height: 22,\n    color: 'white'\n  },\n  titleText: {\n    height: 25,\n    width: 300,\n    fontSize: 16\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth\n  }\n});","map":{"version":3,"sources":["C:/Users/zhenw/Desktop/new/CODE_EXP-project/screens/AddScreen.js"],"names":["React","useState","useEffect","ImagePicker","ActionButton","Icon","ImagePickerExample","image","setImage","text","onChangeText","text2","onChangeText2","titleText","setTitleText","titleText2","setTitleText2","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","Separator","styles","separator","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","cameraImage","launchCameraAsync","flex","alignItems","justifyContent","width","height","input","Alert","actionButtonIcon","StyleSheet","create","margin","borderWidth","fontSize","color","marginVertical","borderBottomColor","borderBottomWidth","hairlineWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform, StyleSheet, TextInput, Text } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport ActionButton from 'react-native-action-button';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\nexport default function ImagePickerExample() {\r\n  const [image, setImage] = useState(null);\r\n  const [text, onChangeText] = React.useState(\"\");\r\n  const [text2, onChangeText2] = React.useState(\"\");\r\n  const [titleText, setTitleText] = useState(\"Shop Name\");\r\n  const [titleText2, setTitleText2] = useState(\"Location\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          alert('Sorry, we need camera roll permissions to make this work!');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const Separator = () => (\r\n    <View style={styles.separator} />\r\n  );\r\n  \r\n   const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [20, 50],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  const cameraImage = async () => {\r\n    let result = await ImagePicker.launchCameraAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [20, 50],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      {image && <Image source={{ uri: image }} style={{ width: 250, height: 450 }} />}\r\n      <Separator />\r\n      <Text style={styles.titleText}>\r\n      Shop Name\r\n      </Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={onChangeText}\r\n        value={text}\r\n      />\r\n      <Text style={styles.titleText}>\r\n      Location\r\n      </Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={onChangeText2}\r\n        value={text2}\r\n      />\r\n      <Button\r\n        title=\"Submit\"\r\n        onPress={() => Alert.alert('Simple Button pressed')}\r\n      />\r\n      <ActionButton buttonColor=\"#2e64e5\">\r\n        <ActionButton.Item\r\n          buttonColor=\"#9b59b6\"\r\n          title=\"Take Photo\"\r\n          onPress={cameraImage}>\r\n          <Icon name=\"camera-outline\" style={styles.actionButtonIcon} />\r\n        </ActionButton.Item>\r\n        <ActionButton.Item\r\n          buttonColor=\"#3498db\"\r\n          title=\"Choose Photo\"\r\n          onPress={pickImage}>\r\n          <Icon name=\"md-images-outline\" style={styles.actionButtonIcon} />\r\n        </ActionButton.Item>\r\n      </ActionButton>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 40,\r\n    width: 300,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n  },\r\n  actionButtonIcon: {\r\n    fontSize: 20,\r\n    height: 22,\r\n    color: 'white',\r\n  },\r\n  titleText: {\r\n    height: 25,\r\n    width: 300,\r\n    fontSize: 16,\r\n  },\r\n  separator: {\r\n    marginVertical: 8,\r\n    borderBottomColor: '#737373',\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}